ЗАДАНИЕ 1
Создать однопользовательскую CRUD программу с консольным интерфейсом для books.db,
то есть создать программу, которая позволит пользоветелю совершать create, read, update,
delete операции над БД.
При старте программы должно появится меню в консоли со следующими пунктами:
- users 
- books
- authors
- transactions
- exit

=============================

При выборе пункта users появляется новое меню:
- List of all users
- Get user info
- Delete user
- Update user email
- Update user phone

При выборе пункта list of all users на экран надо вывести информацию о всех пользователях 
id, имя, фамилия, email, дата и время регистрации.
Список должен быть упорядочек по имени и фамилии (как в алфавите)

При выборе Get user info надо запросить у пользователя id юзера и, если такой есть в базе, то
вернуть подробную информацию по пользователю, а именно id, name, surname, email, phone, age, 
время регистрации, список из названий ролей
Например:
Id: 1
Name: Joe
Surname: Doe
Email: test@gmail.com
Phone: +375447284774
Age: 43
Registration_date: 24-03-2023 19:00:00
Roles: ['admin', 'support']

При выборе Delete user надо запросить у пользователя id юзера и удалить запись, если такая есть в БД.

При выборе Update user email или Update user phone надо запросить у юзера id пользователя и новый email/phone и обновить соответствующие данные
у этого юзера

=====================================

При выборе пункта books появляется новое меню:
- List of all books
- Get book info
- Delete book
- Update book Name

При выборе пункта list of all books на экран надо вывести информацию о всех книг 
id, название, количество страниц, цена, возрастное ограничение, количество.
Список должен быть упорядочек по названию (как в алфавите)

При выборе Get book info надо запросить у пользователя id книги и, если такая есть в базе, то
вернуть подробную информацию по книге, а именно id, название, возрастное ограничение, 
цена, описание книги, список имён и фамилий авторов, количество страниц, список названий жанров, 
формат, возрастное ограничение, количество доступное к покупке, дата и время добавления в магазин
Например:
Id: 1
Name: Learning Python
Age: 14
Price: 50
Description: "wefl;wkf;lwkf;wlkef"
Authors: ['Mark Lutz']
Pages: 1500
Genres: ['Programming', 'Python']
Quantity: 52
Added to shop: 02-01-2023 19:30:10

При выборе Delete user надо запросить у пользователя id книги и удалить запись, если такая есть в БД.

При выборе Update book name надо запросить у юзера id книги и новое название и обновить соответствующие данные
у этой книги.

====================================

При выборе пункта authors появляется новое меню:
- List of all authors
- Get author info

При выборе пункта list of all books на экран надо вывести информацию о всех авторах
id, имя, фамилия
Список должен быть упорядочек по имени и фамилии (как в алфавите)

При выборе Get author info надо запросить у пользователя id автора и, если такой есть в базе, то
вернуть подробную информацию по автору, а именно id, имя, фамилия, дата рождения, дата смерти, информация.

=======================================

При выборе пункта transactions меню не появляется, а сразу выводится информация о 
всех транзакциях.
А точнее данные: имя и фамилия юзера, который совершил транзакцию; номер банковской карты, с которой расплатились;
сумма транзакции, дата и время проведения; адрес куда был доставлен товар (город, улица, дом, почтовый индекс - всё
это ввиде одной строки).

======================================